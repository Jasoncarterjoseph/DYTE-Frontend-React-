{"version":3,"sources":["components/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","language","title","value","onChange","useState","open","setOpen","className","onClick","prevOpen","TransitEnterexit","Launch","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","useEffect","timeout","setTimeout","clearTimeout","sandbox","frameborder","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAuCeA,EA7BA,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,SAASC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAClC,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKF,OACE,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACE,sBAAKE,UAAU,eAAf,UACKN,EACH,wBAASO,QAAS,kBAAMF,GAAQ,SAACG,GAAD,OAAeA,MAAWF,UAAU,sBAApE,SACGF,EAAO,cAACK,EAAA,EAAD,IAAuB,cAACC,EAAA,EAAD,SAGnC,cAAC,aAAD,CACEC,eAbJ,SAAsBC,EAAQC,EAAMZ,GAChCC,EAASD,IAaTA,MAAOA,EACPK,UAAU,sBACVQ,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMlB,EACNmB,MAAO,UACPC,aAAa,SCYRC,EAzCH,WACV,MAAwBjB,mBAAS,IAAjC,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAAsBnB,mBAAS,IAA/B,mBAAOoB,EAAP,KAAYC,EAAZ,KACA,EAAoBrB,mBAAS,IAA7B,mBAAOsB,EAAP,KAAWC,EAAX,KACA,EAA4BvB,mBAAS,IAArC,mBAAOwB,EAAP,KAAeC,EAAf,KAgBA,OAdAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAU,uBAAD,OAELP,EAFK,6BAGJE,EAHI,+BAIHE,EAJG,4BAMR,KACH,OAAO,WACLO,aAAaF,MAEd,CAACT,EAAME,EAAKE,IAGb,qCACE,sBAAKnB,UAAU,gBAAf,UACC,cAAC,EAAD,CAAQN,MAAM,OAAOD,SAAS,MAAME,MAAOoB,EAAMnB,SAAUoB,IAC3D,cAAC,EAAD,CAAQtB,MAAM,MAAMD,SAAS,MAAME,MAAOsB,EAAKrB,SAAUsB,IACzD,cAAC,EAAD,CAAQxB,MAAM,KAAKD,SAAS,aAAaE,MAAOwB,EAAIvB,SAAUwB,OAE/D,qBAAKpB,UAAU,OAAf,SACA,wBACIqB,OAAQA,EACR3B,MAAM,SACNiC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eC1BFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d63bfb9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/dracula.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { Launch,TransitEnterexit } from \"@material-ui/icons\";\r\n\r\n\r\nconst Editor = ({language,title,value,onChange}) => {\r\n    const [open, setOpen] = useState(true);\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n      }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n      <div className=\"editor-title\">\r\n          {title}\r\n        <button  onClick={() => setOpen((prevOpen) => !prevOpen)} className=\"expand-collapse-btn\">\r\n          {open ? <TransitEnterexit /> : <Launch />}\r\n        </button >\r\n      </div>\r\n      <ControlledEditor \r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: \"dracula\",\r\n          lineNumbers: true,\r\n        }}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;","import React, {useEffect,useState } from \"react\";\nimport Editor from \"./components/Editor\";\n\n\nconst App = () => {\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [js, setJs] = useState(\"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n  \n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n  <html>\n  <body>${html}</body>\n  <style>${css}</style>\n  <script>${js}</script>\n  </html>`);\n    }, 250);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [html, css, js]);\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n       <Editor title=\"HTML\" language=\"xml\" value={html} onChange={setHtml}/>\n       <Editor title=\"CSS\" language=\"css\" value={css} onChange={setCss}/>\n       <Editor title=\"JS\" language=\"javascript\" value={js} onChange={setJs}/>\n      </div>\n      <div className=\"pane\">\n      <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameborder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />      \n      </div>\n    </>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}